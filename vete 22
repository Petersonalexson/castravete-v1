Option Explicit

Sub PopulateFuture_5Blocks_ReportDescription()
    Dim wb As Workbook: Set wb = ThisWorkbook
    Dim wsGenerate As Worksheet: Set wsGenerate = wb.Sheets("Generate")
    Dim XAVSheetName As String
    XAVSheetName = CStr(wsGenerate.Range("D7").Value)
    
    Dim wsXAV As Worksheet
    On Error Resume Next
    Set wsXAV = wb.Sheets(XAVSheetName)
    On Error GoTo 0
    
    If wsXAV Is Nothing Then
        MsgBox "Cannot find the XAV sheet named '" & XAVSheetName & "'. Check Generate!D7!", vbExclamation
        Exit Sub
    End If
    
    Dim wsAcctMap As Worksheet: Set wsAcctMap = wb.Sheets("Account Mapping")
    Dim wsFuture As Worksheet:  Set wsFuture = wb.Sheets("FUTURE")
    
    Dim dictAccountMap As Object
    Set dictAccountMap = CreateObject("Scripting.Dictionary")
    dictAccountMap.CompareMode = vbTextCompare
    
    Dim lastRowAcct As Long
    With wsAcctMap
        lastRowAcct = .Cells(.Rows.Count, "B").End(xlUp).Row
        Dim i As Long
        For i = 2 To lastRowAcct
            Dim natAcctVal As Variant
            Dim reportDescVal As Variant
            natAcctVal = .Range("B" & i).Value
            reportDescVal = .Range("D" & i).Value
            If Not IsEmpty(natAcctVal) And Not IsEmpty(reportDescVal) Then
                If Not dictAccountMap.Exists(natAcctVal) Then
                    dictAccountMap.Add natAcctVal, reportDescVal
                End If
            End If
        Next i
    End With
    
    Dim lastRowXAV As Long
    lastRowXAV = wsXAV.Cells(wsXAV.Rows.Count, "A").End(xlUp).Row
    
    Dim dictResults As Object
    Set dictResults = CreateObject("Scripting.Dictionary")
    dictResults.CompareMode = vbTextCompare
    
    Dim dictProcessed As Object
    Set dictProcessed = CreateObject("Scripting.Dictionary")
    dictProcessed.CompareMode = vbTextCompare
    
    Dim rowXAV As Long
    For rowXAV = 2 To lastRowXAV
        Dim voiceNum As Variant
        voiceNum = wsXAV.Range("N" & rowXAV).Value
        If Not dictProcessed.Exists(voiceNum) Then
            dictProcessed.Add voiceNum, True
            Dim bonusTotal As Double
            bonusTotal = 0
            Dim rowXAV2 As Long
            For rowXAV2 = 2 To lastRowXAV
                If wsXAV.Range("N" & rowXAV2).Value = voiceNum Then
                    bonusTotal = bonusTotal + CDbl(wsXAV.Range("O" & rowXAV2).Value)
                End If
            Next rowXAV2
            Dim costCenter As Variant
            costCenter = wsXAV.Range("E" & rowXAV).Value
            Dim natAccountVal As Variant
            natAccountVal = wsXAV.Range("C" & rowXAV).Value
            Dim repDescVal As Variant
            If dictAccountMap.Exists(natAccountVal) Then
                repDescVal = dictAccountMap(natAccountVal)
            Else
                GoTo SkipVoiceNum
            End If
            Dim thisPeriod As Variant
            thisPeriod = wsXAV.Range("A" & rowXAV).Value
            Dim key As String
            key = CStr(costCenter) & "||" & CStr(repDescVal) & "||" & CStr(thisPeriod)
            If dictResults.Exists(key) Then
                dictResults(key) = dictResults(key) + bonusTotal
            Else
                dictResults.Add key, bonusTotal
            End If
SkipVoiceNum:
        End If
    Next rowXAV
    
    Dim cornerCells As Variant
    cornerCells = Array("C6", "C22", "C38", "C54", "C70")
    
    Dim idx As Long
    For idx = LBound(cornerCells) To UBound(cornerCells)
        Dim rngCorner As Range
        Set rngCorner = wsFuture.Range(cornerCells(idx))
        Dim blockCC As Variant
        blockCC = rngCorner.Value
        If IsEmpty(blockCC) Or blockCC = "" Then GoTo NextCorner
        
        Dim dictPeriodToCol As Object
        Set dictPeriodToCol = CreateObject("Scripting.Dictionary")
        dictPeriodToCol.CompareMode = vbTextCompare
        
        Dim startCol As Long
        startCol = rngCorner.Column + 1
        Dim colPtr As Long
        colPtr = startCol
        Do While Not IsEmpty(wsFuture.Cells(rngCorner.Row, colPtr).Value)
            Dim periodVal As Variant
            periodVal = wsFuture.Cells(rngCorner.Row, colPtr).Value
            dictPeriodToCol(CStr(periodVal)) = colPtr
            colPtr = colPtr + 1
        Loop
        
        Dim dictDescToRow As Object
        Set dictDescToRow = CreateObject("Scripting.Dictionary")
        dictDescToRow.CompareMode = vbTextCompare
        
        Dim startRow As Long
        startRow = rngCorner.Row + 1
        Dim rowPtr As Long
        rowPtr = startRow
        Do While Not IsEmpty(wsFuture.Cells(rowPtr, rngCorner.Column).Value)
            Dim descVal As Variant
            descVal = wsFuture.Cells(rowPtr, rngCorner.Column).Value
            dictDescToRow(CStr(descVal)) = rowPtr
            rowPtr = rowPtr + 1
        Loop
        
        Dim arrKeys As Variant
        arrKeys = dictResults.keys
        Dim k As Long
        For k = LBound(arrKeys) To UBound(arrKeys)
            Dim parts() As String
            parts = Split(arrKeys(k), "||")
            Dim ccKey As String
            ccKey = parts(0)
            If ccKey = CStr(blockCC) Then
                Dim repDescKey As String
                repDescKey = parts(1)
                Dim periodKey As String
                periodKey = parts(2)
                If dictDescToRow.Exists(repDescKey) And dictPeriodToCol.Exists(periodKey) Then
                    Dim targetRow As Long
                    targetRow = dictDescToRow(repDescKey)
                    Dim targetCol As Long
                    targetCol = dictPeriodToCol(periodKey)
                    Dim totalVal As Double
                    totalVal = dictResults(arrKeys(k))
                    wsFuture.Cells(targetRow, targetCol).Value = totalVal
                End If
            End If
        Next k
NextCorner:
    Next idx
    
    MsgBox "FUTURE sheet updated successfully for all 5 CC blocks!", vbInformation
End Sub
