let
    //--------------------------------------------------------------------
    // 0) REFERENCE THE EXISTING SmartViewData
    //    Must have: KEY, Hierarchy Name, Value, Parent, Type
    //--------------------------------------------------------------------
    SV = SmartViewData,

    //--------------------------------------------------------------------
    // 1) LOAD & PREP XRP TREE
    //--------------------------------------------------------------------
    TreeRaw = Excel.CurrentWorkbook(){[Name="XRP_Tree_Array"]}[Content],

    // Rename Dimension_Name -> Hierarchy Name if it exists
    TreeRenamed = Table.RenameColumns(
        TreeRaw,
        {{"Dimension_Name", "Hierarchy Name"}},
        MissingField.Ignore
    ),

    // Force text types for Hierarchy Name, Value, Parent
    TreeAsText = Table.TransformColumnTypes(
        TreeRenamed,
        {
            {"Hierarchy Name", Text.Type},
            {"Value", Text.Type},
            {"Parent", Text.Type}
        },
        "en-US"
    ),

    // Create KEY = Hierarchy Name & " | " & Value
    TreeWithKey = Table.AddColumn(
        TreeAsText,
        "KEY",
        each [Hierarchy Name] & " | " & [Value],
        Text.Type
    ),

    // Keep only the four columns we want
    TreeSelected = Table.SelectColumns(
        TreeWithKey,
        {"Value", "Hierarchy Name", "Parent", "KEY"}
    ),

    //--------------------------------------------------------------------
    // 2) LOAD & PREP XRP LIST
    //--------------------------------------------------------------------
    ListRaw = Excel.CurrentWorkbook(){[Name="XRP_List_Array"]}[Content],

    // Rename V_S_C -> Hierarchy Name if it exists
    ListRenamed = Table.RenameColumns(
        ListRaw,
        {{"V_S_C", "Hierarchy Name"}},
        MissingField.Ignore
    ),

    // If Parent doesn't exist, add it as blank
    ListParentCheck = if not List.RenameColumns(List.Columns(ListRenamed),{})?["Parent"]? 
                     then Table.AddColumn(ListRenamed, "Parent", each "", Text.Type) 
                     else ListRenamed,

    // Force text type for [Hierarchy Name], [Value], [Parent]
    ListAsText = Table.TransformColumnTypes(
        ListParentCheck,
        {
            {"Hierarchy Name", Text.Type},
            {"Value", Text.Type},
            {"Parent", Text.Type}
        },
        "en-US"
    ),

    // KEY = Hierarchy Name & " | " & Value
    ListWithKey = Table.AddColumn(
        ListAsText,
        "KEY",
        each [Hierarchy Name] & " | " & [Value],
        Text.Type
    ),

    // Keep four columns
    ListSelected = Table.SelectColumns(
        ListWithKey,
        {"Value", "Hierarchy Name", "Parent", "KEY"}
    ),

    //--------------------------------------------------------------------
    // 3) COMBINE XRP TREE + LIST
    //--------------------------------------------------------------------
    CombinedXRP = Table.Combine({TreeSelected, ListSelected}),

    //--------------------------------------------------------------------
    // 4) MERGE #1: SMARTVIEW -> CombinedXRP (Left Outer)
    //--------------------------------------------------------------------
    SVLeftJoin = Table.NestedJoin(
        SV,
        {"KEY"},
        CombinedXRP,
        {"KEY"},
        "XRPData",
        JoinKind.LeftOuter
    ),

    // Expand only the [Parent] from XRP, rename it to ParentXRP
    SVExpanded = Table.ExpandTableColumn(
        SVLeftJoin,
        "XRPData",
        {"Parent"},
        {"ParentXRP"}
    ),

    // 4b) Add Status column
    // If ParentXRP=null => "Missing in ERP"
    // If Type=Tree and Parent<>ParentXRP => "Different Parent"
    // else => "Match"
    SVWithStatus = Table.AddColumn(
        SVExpanded,
        "Status",
        each if [ParentXRP] = null 
             then "Missing in ERP"
             else if [Type] = "Tree" and [Parent] <> [ParentXRP] 
             then "Different Parent"
             else "Match"
    ),

    //--------------------------------------------------------------------
    // 5) MERGE #2: CombinedXRP -> SmartView (Left Anti)
    //    Rows in XRP not in SV => "Missing in SmartView"
    //--------------------------------------------------------------------
    XRPAntiJoin = Table.NestedJoin(
        CombinedXRP,
        {"KEY"},
        SV,
        {"KEY"},
        "SVMatches",
        JoinKind.LeftAnti
    ),

    // Rename Parent -> ParentXRP
    XRPRenamed = Table.RenameColumns(
        XRPAntiJoin,
        {{"Parent", "ParentXRP"}}
    ),

    // Add placeholders for the SV columns
    // (Hierarchy Name, Value are already present, we add Parent="" if needed, plus Status)
    XRPWithParent = Table.AddColumn(
        XRPRenamed,
        "Parent",
        each "",
        Text.Type
    ),

    // Add Status
    XRPWithStatus = Table.AddColumn(
        XRPWithParent,
        "Status",
        each "Missing in SmartView"
    ),

    //--------------------------------------------------------------------
    // 6) COMBINE THE TWO RESULT SETS
    //--------------------------------------------------------------------
    FinalCombined = Table.Combine({SVWithStatus, XRPWithStatus}),

    //--------------------------------------------------------------------
    // 7) SELECT & REORDER EXACT COLUMNS:
    //    KEY, Hierarchy Name, Value, Parent, ParentXRP, Status
    //--------------------------------------------------------------------
    Reordered = Table.SelectColumns(
        FinalCombined,
        {"KEY", "Hierarchy Name", "Value", "Parent", "ParentXRP", "Status"}
    )
in
    Reordered
