let

    SV_Original = SViewData_Comp,
    SVRenamed = Table.RenameColumns(SV_Original, {{"Parent", "SView Parent"}}),
    SVSelected = Table.SelectColumns(
        SVRenamed,
        {"KEY", "Hierarchy Name", "Value", "SView Parent", "SView Path"}
    ),
    
    XRPOriginal = XRPData_Comp,
    XRPRenamed = Table.RenameColumns(
        XRPOriginal,
        {{"Parent", "XRP Parent"}},
        MissingField.Ignore
    ),
    
    XRPSelected = Table.SelectColumns(
        XRPRenamed,
        {"KEY", "XRP Parent", "XRP Path"}
    ),
    

    FullJoin = Table.NestedJoin(
        SVSelected, {"KEY"}, XRPSelected, {"KEY"}, "XRPData", JoinKind.FullOuter
    ),
    
    Expanded = Table.ExpandTableColumn(
        FullJoin,
        "XRPData", 
        {"XRP Parent", "XRP Path"}, 
        {"XRP Parent", "XRP Path"}
    ),
    
    MissingHierarchy = Table.SelectRows(Expanded, each [Hierarchy Name] = null),
    
    WithExtractedKey = Table.AddColumn(
        MissingHierarchy,
        "Extracted Key",
        each if [KEY] <> null then 
            let
                keyParts = Text.Split([KEY], "/"),
                finalKey = keyParts{List.Count(keyParts)-1}
            in
                finalKey
        else "Unknown"  
    ),

    UpdatedMissing = Table.TransformColumns(
        WithExtractedKey,
        {
            {"Hierarchy Name", each [Extracted Key]},
            {"Value", each [Extracted Key]}
        }
    ),
    
    CleanedMissing = Table.RemoveColumns(UpdatedMissing, {"Extracted Key"}),
    
    NonMissingRows = Table.SelectRows(Expanded, each [Hierarchy Name] <> null),
    
    CombinedTable = Table.Combine({NonMissingRows, CleanedMissing}),
    
    WithDimension = Table.AddColumn(
        CombinedTable,
        "Dimension",
        each 
            let
                matchingRows = Table.SelectRows(Hierarchy_Matrix, (h) => h[Hierarchy Name] = [Hierarchy Name]),
                dimensionValue = if Table.RowCount(matchingRows) > 0 then matchingRows{0}[Dimension] else "Unknown Dimension"
            in
                dimensionValue
    ),
    
    WithStatus = Table.AddColumn(
        WithDimension,
        "Status",
        each
            let
                svP = if [SView Parent] = null then "" else [SView Parent],
                xrpP = if [XRP Parent] = null then "" else [XRP Parent]
            in
                if svP = "" and xrpP = "" then "Parent match"
                else if svP = "" and xrpP <> "" then "Missing in SView"
                else if svP <> "" and xrpP = "" then "Missing in XRP"
                else if svP <> xrpP then "Parent mismatch"
                else "Parent match"
    ),
    
    FinalColumns = Table.SelectColumns(
        WithStatus,
        {
            "KEY",
            "Hierarchy Name",
            "Value",
            "SView Parent", 
            "XRP Parent",
            "Status",
            "SView Path",
            "XRP Path",
            "Dimension"
        }
    ),
    
    RemoveMatches = Table.SelectRows(FinalColumns, each [Status] <> "Parent match")
in
    RemoveMatches
