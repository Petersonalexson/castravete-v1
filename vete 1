Option Explicit

'==========================================================
' MAIN: Refresh Smart View hierarchies, then create arrays
'==========================================================
Public Sub RefreshSmartViewAndCreateArrays()
    RefreshSmartViewTree
    CreateHierarchyArrays
End Sub

'==========================================================
' REFRESH SMART VIEW HIERARCHIES - ORIGINAL WORKING VERSION
'==========================================================
Public Sub RefreshSmartViewTree()
    Dim arrSheets As Variant
    Dim ws As Worksheet
    Dim wsLists As Worksheet
    Dim ConnectionName As String
    Dim Ret As Long, HeaderRow As Long, LastRow As Long, I As Long
    Dim ConnStatus As Integer
    
    Set wsLists = ThisWorkbook.Worksheets("Lists")
    
    With wsLists
        ConnectionName = .Range("nmConnectionName").Value
        arrSheets = .Range("Hierarchy_Matrix").Value
    End With
    
    HeaderRow = 4
    
    For I = LBound(arrSheets) To UBound(arrSheets)
        Set ws = ThisWorkbook.Worksheets(arrSheets(I, 1))
        With ws
            Ret = HypUIConnect(.Name, "", "", ConnectionName)
            ConnStatus = HypConnected(.Name)
            If ConnStatus <> -1 Then Stop
            'Calculate last row
            LastRow = .Range("A" & .Rows.Count).End(xlUp).Row
            'Delete hierarchy rows except hierarchy name
            If LastRow > HeaderRow Then
                .Rows(HeaderRow & ":" & LastRow - 1).Delete Shift:=xlUp
            End If
            LastRow = .Range("A" & .Rows.Count).End(xlUp).Row
            Ret = HypSetSheetOption(.Name, HYP_SVC_OPTIONS_INDEX.HSV_MEMBER_DISPLAY, 1)
            Ret = HypZoomIn(.Name, .Range("A" & LastRow), 1, False)
            LastRow = .Range("A" & .Rows.Count).End(xlUp).Row
            
            ' Delete the named range if it exists
            On Error Resume Next
            ThisWorkbook.Names(arrSheets(I, 2)).Delete
            On Error GoTo 0
            
            ThisWorkbook.Names.Add Name:=arrSheets(I, 2), RefersTo:=.Range("A" & HeaderRow & ":A" & LastRow)
        End With
    Next I
End Sub

'==========================================================
' CREATE HIERARCHY ARRAYS
' Creates arrays from row 3 to last row for each hierarchy
'==========================================================
Public Sub CreateHierarchyArrays()
    Dim wsLists As Worksheet
    Dim arrSheets As Variant
    Dim hierarchyArrays As Object
    Dim i As Long
    
    ' Create dictionary to store arrays
    Set hierarchyArrays = CreateObject("Scripting.Dictionary")
    
    ' Get hierarchy matrix from Lists worksheet
    Set wsLists = ThisWorkbook.Worksheets("Lists")
    arrSheets = wsLists.Range("Hierarchy_Matrix").Value
    
    ' Process each hierarchy in the matrix
    For i = LBound(arrSheets) To UBound(arrSheets)
        Dim sheetName As String
        Dim rangeName As String
        Dim hierarchyName As String
        
        sheetName = Trim(arrSheets(i, 1))
        rangeName = Trim(arrSheets(i, 2))
        hierarchyName = Trim(arrSheets(i, 3))
        
        ' Skip if empty
        If sheetName <> "" And rangeName <> "" Then
            ' Create array for this hierarchy
            Dim hierarchyArray As Variant
            hierarchyArray = CreateHierarchyArray(rangeName)
            
            ' Store array in dictionary with hierarchy name as key
            If Not IsEmpty(hierarchyArray) Then
                hierarchyArrays.Add hierarchyName, hierarchyArray
            End If
        End If
    Next i
    
    ' Show confirmation
    MsgBox "Created " & hierarchyArrays.Count & " hierarchy arrays", vbInformation
End Sub

'==========================================================
' CREATE HIERARCHY ARRAY
' Creates an array from row 3 to last row of a named range
'==========================================================
Private Function CreateHierarchyArray(rangeName As String) As Variant
    Dim rng As Range
    Dim dataArray As Variant
    Dim startRow As Long
    Dim endRow As Long
    
    On Error Resume Next
    Set rng = ThisWorkbook.Names(rangeName).RefersToRange
    If rng Is Nothing Then
        ' Named range doesn't exist
        CreateHierarchyArray = Empty
        Exit Function
    End If
    On Error GoTo 0
    
    ' Get start and end rows for the range (start from row 3)
    startRow = 3
    endRow = rng.Rows.Count
    
    ' Create array from row 3 to last row
    If endRow >= startRow Then
        Dim adjustedRange As Range
        Set adjustedRange = rng.Worksheet.Range(rng.Cells(startRow, 1), rng.Cells(endRow, 1))
        dataArray = adjustedRange.Value
        CreateHierarchyArray = dataArray
    Else
        ' Not enough rows
        CreateHierarchyArray = Empty
    End If
End Function
